// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ATHLETE
  COACH
  HEADCOACH
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String?
  role          UserRole  @default(ATHLETE)
  emailVerified DateTime?
  image         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Account Account[]
  Athlete Athlete[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Athlete {
  id       Int       @id @default(autoincrement())
  UserId   String
  height   Int?
  weight   Int?
  brithday DateTime?
  grade    String?
  gender   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User @relation(fields: [UserId], references: [id], onDelete: Cascade)

  FeeHistory FeeHistory[]
}

model Fee {
  id     Int    @id @default(autoincrement())
  name   String @unique
  amount BigInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  FeeHistory FeeHistory[]
}

model FeeHistory {
  id        Int     @id @default(autoincrement())
  AthleteId Int
  FeeId     Int
  note      String?
  amount    Int
  month     Int
  year      Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Athlete Athlete @relation(fields: [AthleteId], references: [id])
  Fee     Fee     @relation(fields: [FeeId], references: [id])
}
